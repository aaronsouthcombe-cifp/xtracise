package com.xtracise;

import com.xtracise.models.Usuari;
import javax.swing.JOptionPane;
import at.favre.lib.crypto.bcrypt.BCrypt;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
/**
 *
 * @author aaron
 */
public class LoginDialog extends javax.swing.JDialog {

    private static final BCrypt.Verifyer verifyer = BCrypt.verifyer();
    private Usuari loggedInUser = null;
    private boolean successful = false;
    
    public Usuari getLoggedInUser() {
        return loggedInUser;
    }

    /**
     * Creates new form LoginDialog
     */
    public LoginDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlEmail = new javax.swing.JLabel();
        jtfEmail = new javax.swing.JTextField();
        jlPassword = new javax.swing.JLabel();
        jbLogin = new javax.swing.JButton();
        jpfPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jlEmail.setText("Email:");

        jlPassword.setText("Password:");

        jbLogin.setText("Login");
        jbLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlPassword)
                            .addComponent(jlEmail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(jpfPassword)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jbLogin)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlEmail)
                    .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlPassword)
                    .addComponent(jpfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jbLogin)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // public method to get authentication state, placeholder for initial purpose only
    public boolean isSuccessful() {
        return successful;
    }

    // temporarily login is just a simple function that validates one credential set
    private void jbLoginActionPerformed(java.awt.event.ActionEvent evt) {
        String email = jtfEmail.getText();
        String password = new String(jpfPassword.getPassword());

        try {
            Usuari user = DataAccess.getUser(email);

            if (user != null && validatePassword(password, user.getPasswordHash())) {
                successful = true;
                loggedInUser = user;
                dispose();
            } else {
                successful = false;
                JOptionPane.showMessageDialog(this,
                        "Invalid email or password",
                        "Login failed",
                        JOptionPane.ERROR_MESSAGE
                );
                jpfPassword.setText("");
            }
        } catch (Exception e) {
            loggedInUser = null;
            JOptionPane.showMessageDialog(this,
                    "An error ocurred. Please try again or contact the software provider.",
                    "Login error",
                    JOptionPane.ERROR_MESSAGE
            );
        }

    }

    private boolean validatePassword(String password, String passHash) {

        try {
            BCrypt.Result result = verifyer.verify(
                    password.getBytes(StandardCharsets.UTF_8),
                    passHash.getBytes(StandardCharsets.UTF_8)
            );
            return result.verified;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }

    }

    public static String hashPassword(String plainTextPassword) {
        return new String(
                BCrypt.withDefaults().hash(
                        12,
                        plainTextPassword.getBytes(StandardCharsets.UTF_8)
                ),
                StandardCharsets.UTF_8
        );
    }

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbLogin;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JLabel jlPassword;
    private javax.swing.JPasswordField jpfPassword;
    private javax.swing.JTextField jtfEmail;
    // End of variables declaration//GEN-END:variables
}
